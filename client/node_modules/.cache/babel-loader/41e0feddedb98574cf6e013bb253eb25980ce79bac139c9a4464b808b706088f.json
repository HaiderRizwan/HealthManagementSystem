{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { checkAuth } from '../utils/auth';\nconst ProtectedRoute = ({\n  children,\n  requiredRole\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const token = localStorage.getItem('token');\n  console.log('Current Token:', token);\n  console.log('Required Role:', requiredRole);\n  useEffect(() => {\n    // Check if user is authenticated\n    if (!checkAuth()) {\n      console.log('Not authenticated, redirecting to login');\n      navigate('/login');\n      return;\n    }\n\n    // Check user role if requiredRole is provided\n    const userRole = localStorage.getItem('userRole');\n    console.log('User Role from localStorage:', userRole);\n    if (requiredRole && (userRole === null || userRole === void 0 ? void 0 : userRole.toLowerCase()) !== requiredRole.toLowerCase()) {\n      console.log('Role mismatch, redirecting to login');\n      console.log('Required:', requiredRole.toLowerCase(), 'Actual:', userRole === null || userRole === void 0 ? void 0 : userRole.toLowerCase());\n      navigate('/login');\n    } else {\n      console.log('Role matched, allowing access');\n    }\n  }, [navigate, requiredRole]);\n  return children;\n};\n_s(ProtectedRoute, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["useEffect","useNavigate","checkAuth","ProtectedRoute","children","requiredRole","_s","navigate","token","localStorage","getItem","console","log","userRole","toLowerCase","_c","$RefreshReg$"],"sources":["C:/Users/Inspire Uplift/Desktop/web/healthmanagementsystem/Health-Management-System-main/client/src/components/ProtectedRoute.js"],"sourcesContent":["import { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { checkAuth } from '../utils/auth';\n\nconst ProtectedRoute = ({ children, requiredRole }) => {\n  const navigate = useNavigate();\n  const token = localStorage.getItem('token');\n  \n  console.log('Current Token:', token);\n  console.log('Required Role:', requiredRole);\n  \n  useEffect(() => {\n    // Check if user is authenticated\n    if (!checkAuth()) {\n      console.log('Not authenticated, redirecting to login');\n      navigate('/login');\n      return;\n    }\n\n    // Check user role if requiredRole is provided\n    const userRole = localStorage.getItem('userRole');\n    console.log('User Role from localStorage:', userRole);\n    \n    if (requiredRole && userRole?.toLowerCase() !== requiredRole.toLowerCase()) {\n      console.log('Role mismatch, redirecting to login');\n      console.log('Required:', requiredRole.toLowerCase(), 'Actual:', userRole?.toLowerCase());\n      navigate('/login');\n    } else {\n      console.log('Role matched, allowing access');\n    }\n  }, [navigate, requiredRole]);\n\n  return children;\n};\n\nexport default ProtectedRoute;"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,SAAS,QAAQ,eAAe;AAEzC,MAAMC,cAAc,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACrD,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAMO,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAE3CC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEJ,KAAK,CAAC;EACpCG,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEP,YAAY,CAAC;EAE3CL,SAAS,CAAC,MAAM;IACd;IACA,IAAI,CAACE,SAAS,CAAC,CAAC,EAAE;MAChBS,OAAO,CAACC,GAAG,CAAC,yCAAyC,CAAC;MACtDL,QAAQ,CAAC,QAAQ,CAAC;MAClB;IACF;;IAEA;IACA,MAAMM,QAAQ,GAAGJ,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IACjDC,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEC,QAAQ,CAAC;IAErD,IAAIR,YAAY,IAAI,CAAAQ,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEC,WAAW,CAAC,CAAC,MAAKT,YAAY,CAACS,WAAW,CAAC,CAAC,EAAE;MAC1EH,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC;MAClDD,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEP,YAAY,CAACS,WAAW,CAAC,CAAC,EAAE,SAAS,EAAED,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEC,WAAW,CAAC,CAAC,CAAC;MACxFP,QAAQ,CAAC,QAAQ,CAAC;IACpB,CAAC,MAAM;MACLI,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;IAC9C;EACF,CAAC,EAAE,CAACL,QAAQ,EAAEF,YAAY,CAAC,CAAC;EAE5B,OAAOD,QAAQ;AACjB,CAAC;AAACE,EAAA,CA7BIH,cAAc;EAAA,QACDF,WAAW;AAAA;AAAAc,EAAA,GADxBZ,cAAc;AA+BpB,eAAeA,cAAc;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}