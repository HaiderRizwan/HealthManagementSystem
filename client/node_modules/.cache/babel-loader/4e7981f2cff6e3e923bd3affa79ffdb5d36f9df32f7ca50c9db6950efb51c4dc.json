{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Inspire Uplift\\\\Desktop\\\\web\\\\healthmanagementsystem\\\\Health-Management-System-main\\\\client\\\\src\\\\components\\\\profiles\\\\Client\\\\ClientBookAppointment.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClientBookAppointment = ({\n  doctor,\n  availableDates,\n  userId,\n  onBookAppointment,\n  onCancel,\n  onDateSelect\n}) => {\n  _s();\n  const [clientName, setClientName] = useState('');\n  const [clientEmail, setClientEmail] = useState('');\n  const [selectedDate, setSelectedDate] = useState('NULL');\n  const handleBookAppointmentClick = () => {\n    // Check if client name and email are provided\n    if (selectedDate === 'NULL') {\n      alert('Please select the date before booking the appointment.');\n      return;\n    }\n\n    // Check if a date is selected\n    if (!selectedDate) {\n      alert('Please select a date for the appointment.');\n      return;\n    }\n\n    // Check if the selected date is in the future\n    const selectedDateTime = new Date(selectedDate).getTime();\n    const currentDateTime = new Date().getTime();\n    if (selectedDateTime < currentDateTime) {\n      alert('Please select a future date for the appointment.');\n      return;\n    }\n\n    // Pass client info to the parent component\n    onBookAppointment({\n      client_id: userId,\n      name: clientName,\n      email: clientEmail\n    });\n\n    // Reset client name and email fields after booking appointment\n    setClientName('');\n    setClientEmail('');\n  };\n  const handleDateChange = event => {\n    const selectedDate = event.target.value;\n    setSelectedDate(selectedDate); // Set the selected date\n    onDateSelect(selectedDate); // Pass the selected date to the parent component\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"appointment-form\",\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: styles.header,\n      children: \"Book Appointment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: styles.text,\n      children: [\"Doctor: \", doctor.user.fullName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: styles.text,\n      children: [\"DoctorId: \", doctor.user._id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: styles.text,\n      children: [\"ClientId: \", userId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Select Date:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        style: styles.select,\n        onChange: handleDateChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"NULL\",\n          children: \"Select Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), availableDates && availableDates.length > 0 ? availableDates.map((date, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: date,\n          children: date\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"No available dates\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: styles.button,\n      onClick: handleBookAppointmentClick,\n      children: \"Book Appointment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: styles.button,\n      onClick: onCancel,\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(ClientBookAppointment, \"hhNkuDlgrJLAYrU7yimoUyb7xTg=\");\n_c = ClientBookAppointment;\nconst styles = {\n  container: {\n    textAlign: 'center',\n    padding: '20px',\n    border: '1px solid #ccc',\n    borderRadius: '8px',\n    boxShadow: '0 0 10px rgba(0, 0, 0, 0.1)',\n    maxWidth: '400px',\n    margin: 'auto'\n  },\n  header: {\n    fontSize: '24px',\n    fontWeight: 'bold',\n    marginBottom: '20px',\n    color: '#333'\n  },\n  text: {\n    fontSize: '16px',\n    marginBottom: '10px'\n  },\n  select: {\n    width: '100%',\n    padding: '10px',\n    marginBottom: '20px',\n    borderRadius: '5px',\n    border: '1px solid #ccc'\n  },\n  button: {\n    padding: '10px 20px',\n    borderRadius: '5px',\n    border: 'none',\n    backgroundColor: '#007bff',\n    color: '#fff',\n    cursor: 'pointer',\n    margin: '0 10px',\n    transition: 'background-color 0.3s ease'\n  }\n};\nexport default ClientBookAppointment;\nvar _c;\n$RefreshReg$(_c, \"ClientBookAppointment\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ClientBookAppointment","doctor","availableDates","userId","onBookAppointment","onCancel","onDateSelect","_s","clientName","setClientName","clientEmail","setClientEmail","selectedDate","setSelectedDate","handleBookAppointmentClick","alert","selectedDateTime","Date","getTime","currentDateTime","client_id","name","email","handleDateChange","event","target","value","className","style","styles","container","children","header","fileName","_jsxFileName","lineNumber","columnNumber","text","user","fullName","_id","select","onChange","length","map","date","index","disabled","button","onClick","_c","textAlign","padding","border","borderRadius","boxShadow","maxWidth","margin","fontSize","fontWeight","marginBottom","color","width","backgroundColor","cursor","transition","$RefreshReg$"],"sources":["C:/Users/Inspire Uplift/Desktop/web/healthmanagementsystem/Health-Management-System-main/client/src/components/profiles/Client/ClientBookAppointment.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst ClientBookAppointment = ({ doctor, availableDates, userId, onBookAppointment, onCancel, onDateSelect }) => {\n  const [clientName, setClientName] = useState('');\n  const [clientEmail, setClientEmail] = useState('');\n  const [selectedDate, setSelectedDate] = useState('NULL');\n\n  const handleBookAppointmentClick = () => {\n    // Check if client name and email are provided\n    if (selectedDate === 'NULL') {\n      alert('Please select the date before booking the appointment.');\n      return;\n    }\n  \n    // Check if a date is selected\n    if (!selectedDate) {\n      alert('Please select a date for the appointment.');\n      return;\n    }\n  \n    // Check if the selected date is in the future\n    const selectedDateTime = new Date(selectedDate).getTime();\n    const currentDateTime = new Date().getTime();\n  \n    if (selectedDateTime < currentDateTime) {\n      alert('Please select a future date for the appointment.');\n      return;\n    }\n  \n    // Pass client info to the parent component\n    onBookAppointment({\n      client_id: userId,\n      name: clientName,\n      email: clientEmail,\n    });\n  \n    // Reset client name and email fields after booking appointment\n    setClientName('');\n    setClientEmail('');\n  };\n\n  const handleDateChange = (event) => {\n    const selectedDate = event.target.value;\n    setSelectedDate(selectedDate); // Set the selected date\n    onDateSelect(selectedDate); // Pass the selected date to the parent component\n  };\n\n  return (\n    <div className=\"appointment-form\" style={styles.container}>\n      <h3 style={styles.header}>Book Appointment</h3>\n      <p style={styles.text}>Doctor: {doctor.user.fullName}</p>\n      <p style={styles.text}>DoctorId: {doctor.user._id}</p>\n      <p style={styles.text}>ClientId: {userId}</p>\n      <label>\n        Select Date:\n        <select style={styles.select} onChange={handleDateChange}>\n          <option value=\"NULL\">Select Date</option>\n          {availableDates && availableDates.length > 0 ? (\n            availableDates.map((date, index) => (\n              <option key={index} value={date}>\n                {date}\n              </option>\n            ))\n          ) : (\n            <option value=\"\" disabled>No available dates</option>\n          )}\n        </select>\n      </label>\n      <button style={styles.button} onClick={handleBookAppointmentClick}>Book Appointment</button>\n      <button style={styles.button} onClick={onCancel}>Cancel</button>\n    </div>\n  );\n};\n\nconst styles = {\n  container: {\n    textAlign: 'center',\n    padding: '20px',\n    border: '1px solid #ccc',\n    borderRadius: '8px',\n    boxShadow: '0 0 10px rgba(0, 0, 0, 0.1)',\n    maxWidth: '400px',\n    margin: 'auto',\n  },\n  header: {\n    fontSize: '24px',\n    fontWeight: 'bold',\n    marginBottom: '20px',\n    color: '#333',\n  },\n  text: {\n    fontSize: '16px',\n    marginBottom: '10px',\n  },\n  select: {\n    width: '100%',\n    padding: '10px',\n    marginBottom: '20px',\n    borderRadius: '5px',\n    border: '1px solid #ccc',\n  },\n  button: {\n    padding: '10px 20px',\n    borderRadius: '5px',\n    border: 'none',\n    backgroundColor: '#007bff',\n    color: '#fff',\n    cursor: 'pointer',\n    margin: '0 10px',\n    transition: 'background-color 0.3s ease',\n  },\n};\n\nexport default ClientBookAppointment;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}