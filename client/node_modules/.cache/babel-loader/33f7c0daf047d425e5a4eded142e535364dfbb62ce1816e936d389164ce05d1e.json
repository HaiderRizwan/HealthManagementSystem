{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Inspire Uplift\\\\Desktop\\\\web\\\\healthmanagementsystem\\\\Health-Management-System-main\\\\client\\\\src\\\\components\\\\profiles\\\\Client\\\\stats.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './stats.css';\nimport TestResult from './TestResult';\nimport { TextField, Button } from '@mui/material';\nimport { Select, MenuItem } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Stats = ({\n  userId\n}) => {\n  _s();\n  const [bloodtype, setBloodType] = useState('');\n  const [clickCount, setClickCount] = useState(0);\n  const [timer, setTimer] = useState(0);\n  const [timerInterval, setTimerInterval] = useState(null);\n  const [lungHealth, setLungHealth] = useState(0);\n  const [boolval, setbool] = useState(0);\n  const [startTime, setStartTime] = useState(null);\n  const [age, setAge] = useState('');\n  const [height, setHeight] = useState('');\n  const [weight, setWeight] = useState('');\n  const [showBasicForm, setShowBasicForm] = useState(false);\n  const [showBasicInfo, setShowBasicInfo] = useState(false);\n  const checkLungs = () => {\n    setClickCount(prevClickCount => prevClickCount + 1);\n    if (clickCount === 0) {\n      showCircle();\n      setStartTime(Date.now());\n    } else if (clickCount === 1) {\n      clearInterval(timerInterval);\n      calculateHealth();\n      // Reset all states to their initial values\n      setTimer(0);\n      setClickCount(0);\n    }\n  };\n  const showCircle = () => {\n    const rectangle = document.querySelector('.rectangle1');\n    rectangle.innerHTML = \"<div class='inner-circle'></div>\";\n    console.log(\"show\", clickCount);\n  };\n  const removeCircle = () => {\n    const rectangle = document.querySelector('.rectangle1');\n    rectangle.innerHTML = `<div><h2>Lung Health</h2><p>${lungHealth}%</p></div>`;\n    console.log(\"remove\", clickCount);\n  };\n  const calculateHealth = () => {\n    const endTime = Date.now(); // Record the end time\n    const timeDifference = endTime - startTime; // Calculate the time difference in milliseconds\n\n    const breathHoldingTime = Math.round(timeDifference / 100);\n    const health = Math.max(0, 100 - breathHoldingTime); // Assuming longer holding time is healthier\n    console.log('Breath Holding Time:', breathHoldingTime, timeDifference);\n    setLungHealth(health);\n    removeCircle();\n    console.log('Lung Health:', health, lungHealth);\n    const rectangle = document.querySelector('.rectangle1');\n    rectangle.classList.remove('green', 'orange', 'red');\n    if (lungHealth >= 80) {\n      rectangle.classList.add('green');\n    } else if (lungHealth >= 50 && lungHealth < 80) {\n      rectangle.classList.add('orange');\n    } else {\n      rectangle.classList.add('red');\n    }\n  };\n  const fetchBasicInfo = async () => {\n    try {\n      const response = await axios.get(`http://localhost:5000/api/${userId}/check_basic_info`);\n      const basicInfoData = response.data;\n      console.log('Basic Info Data:', basicInfoData);\n      // Assuming basic info is an object\n      if (basicInfoData) {\n        console.log('Age:', basicInfoData.age);\n        console.log('Height:', basicInfoData.height);\n        console.log('Weight:', basicInfoData.weight);\n        // Assuming you have state variables to set age, height, and weight\n        setAge(basicInfoData.age);\n        setHeight(basicInfoData.height);\n        setWeight(basicInfoData.weight);\n        setShowBasicInfo(true);\n      }\n    } catch (error) {\n      console.error('Error fetching basic info:', error);\n      // Handle error\n    }\n  };\n  const fetchBloodType = async () => {\n    try {\n      const response = await axios.get(`http://localhost:5000/api/${userId}/check_Bloodtype`);\n      const bloodTypeData = response.data;\n      console.log('Blood Type Data:', bloodTypeData);\n      if (bloodTypeData.length > 0) {\n        const firstBloodType = bloodTypeData[0];\n        console.log('Blood Type:', firstBloodType.bloodtype);\n        setBloodType(firstBloodType.bloodtype);\n      }\n    } catch (error) {\n      console.error('Error fetching blood type:', error);\n      // Handle error\n    }\n  };\n  useEffect(() => {\n    fetchBloodType();\n    fetchBasicInfo();\n  }, [userId]);\n  const handleBloodTypeUpdate = async event => {\n    const selectedBloodType = event.target.value;\n    setBloodType(selectedBloodType);\n    console.log('Selected blood type:', userId, selectedBloodType);\n    try {\n      const response = await axios.post(`http://localhost:5000/api/${userId}/post_Bloodtype`, {\n        userId: userId,\n        bloodType: selectedBloodType\n      });\n      console.log('Blood type updated successfully:', response.data);\n    } catch (error) {\n      console.error('Error from stats updating blood type:', error);\n      // Handle error\n    }\n  };\n  const handleBasicInfoUpdates = async () => {\n    try {\n      const response = await axios.post(`http://localhost:5000/api/${userId}/post_basic_info`, {\n        userId: userId,\n        age: age,\n        height: height,\n        weight: weight\n      });\n      console.log('Basic Info Updated successfully:', response.data);\n    } catch (error) {\n      console.error('Error from stats updating Basic Info:', error);\n      // Handle error\n    }\n  };\n  const handleBasicInfoClick = () => {\n    if (showBasicInfo == true) {\n      let BMI = weight / (height * height);\n      let basic = document.getElementById('basic-info');\n      basic.innerHTML = `<p><strong>Age</strong>: <em>${age} years</em></p>\n    <p><strong>Height</strong>: <em>${height} metres</em></p>\n    <p><strong>Weight</strong>:<em> ${weight} KGs</em></p>\n    <p><strong>BMI</strong>:<em> ${BMI}</em></p>`;\n    } else {\n      setShowBasicForm(true);\n    }\n  };\n  const handleinfo = async () => {};\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      let BMI = weight / (height * height);\n      console.log(age, height, weight);\n      let form = document.getElementById('basicform');\n      form.style.display = 'none';\n      let basic = document.getElementById('basic');\n      basic.innerHTML = `<p><strong>Age</strong>: <em>${age} years</em></p>\n    <p><strong>Height</strong>: <em>${height} metres</em></p>\n    <p><strong>Weight</strong>:<em> ${weight} KGs</em></p>\n    <p><strong>BMI</strong>:<em> ${BMI}</em></p>`;\n      handleBasicInfoUpdates();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"holder\",\n      children: [bloodtype ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"blood circle d-flex align-items-center justify-content-center text-white animation-enabled\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"inner-p\",\n            children: bloodtype\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            color: 'black'\n          },\n          children: \" Blood Type \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Select, {\n          value: bloodtype,\n          onChange: handleBloodTypeUpdate,\n          displayEmpty: true,\n          sx: {\n            bgcolor: '#007bff',\n            color: 'white'\n          },\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"\",\n            disabled: true,\n            children: \"Select Blood Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"A+\",\n            children: \"A+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"A-\",\n            children: \"A-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"B+\",\n            children: \"B+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"B-\",\n            children: \"B-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"AB+\",\n            children: \"AB+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"AB-\",\n            children: \"AB-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"O+\",\n            children: \"O+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"O-\",\n            children: \"O-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 3\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"blood circle d-flex align-items-center justify-content-center text-white\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"inner-p\",\n              children: bloodtype\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rectangle1\",\n        onClick: checkLungs,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: boolval ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              style: {\n                color: 'black'\n              },\n              children: \"Lung Health\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"health\",\n              children: [lungHealth, \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              style: {\n                color: 'black'\n              },\n              children: \"Lung Health\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"health\",\n              children: [\"Click to check.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 52\n              }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Click again Until you can Hold your breath\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rectangle2\",\n        onClick: handleBasicInfoClick,\n        children: showBasicForm ? /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"basic\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            id: \"basicform\",\n            onKeyPress: handleKeyPress,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              placeholder: \"Age (Years)\",\n              value: age,\n              required: true,\n              onChange: e => setAge(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              placeholder: \"Height (Metres)\",\n              value: height,\n              required: true,\n              onChange: e => setHeight(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              placeholder: \"Weight (KGs)\",\n              value: weight,\n              required: true,\n              onChange: e => setWeight(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 9\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"basic-info\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: 'center',\n              fontSize: '2rem',\n              fontWeight: 'bold'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"em\", {\n              children: \"Basic Info\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 88\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(TestResult, {\n      userId: userId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 194,\n    columnNumber: 5\n  }, this);\n};\n_s(Stats, \"33OzwRXlT10Ms4WTd6i0vm+oE6A=\");\n_c = Stats;\nexport default Stats;\nvar _c;\n$RefreshReg$(_c, \"Stats\");","map":{"version":3,"names":["React","useState","useEffect","axios","TestResult","TextField","Button","Select","MenuItem","jsxDEV","_jsxDEV","Stats","userId","_s","bloodtype","setBloodType","clickCount","setClickCount","timer","setTimer","timerInterval","setTimerInterval","lungHealth","setLungHealth","boolval","setbool","startTime","setStartTime","age","setAge","height","setHeight","weight","setWeight","showBasicForm","setShowBasicForm","showBasicInfo","setShowBasicInfo","checkLungs","prevClickCount","showCircle","Date","now","clearInterval","calculateHealth","rectangle","document","querySelector","innerHTML","console","log","removeCircle","endTime","timeDifference","breathHoldingTime","Math","round","health","max","classList","remove","add","fetchBasicInfo","response","get","basicInfoData","data","error","fetchBloodType","bloodTypeData","length","firstBloodType","handleBloodTypeUpdate","event","selectedBloodType","target","value","post","bloodType","handleBasicInfoUpdates","handleBasicInfoClick","BMI","basic","getElementById","handleinfo","handleKeyPress","e","key","form","style","display","children","className","fileName","_jsxFileName","lineNumber","columnNumber","color","onChange","displayEmpty","sx","bgcolor","disabled","onClick","id","onKeyPress","type","placeholder","required","textAlign","fontSize","fontWeight","_c","$RefreshReg$"],"sources":["C:/Users/Inspire Uplift/Desktop/web/healthmanagementsystem/Health-Management-System-main/client/src/components/profiles/Client/stats.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './stats.css';\nimport TestResult from './TestResult';\nimport { TextField, Button } from '@mui/material';\nimport { Select, MenuItem } from '@mui/material';\n\n\nconst Stats = ({ userId }) => {\n  const [bloodtype, setBloodType] = useState('');\n  const [clickCount, setClickCount] = useState(0);\n  const [timer, setTimer] = useState(0);\n  const [timerInterval, setTimerInterval] = useState(null);\n  const [lungHealth, setLungHealth] = useState(0);\n  const [boolval, setbool] = useState(0);\n  const [startTime, setStartTime] = useState(null);\n  const [age, setAge] = useState('');\n  const [height, setHeight] = useState('');\n  const [weight, setWeight] = useState('');\n  const [showBasicForm, setShowBasicForm] = useState(false);\n  const [showBasicInfo, setShowBasicInfo] = useState(false);\n\n  const checkLungs = () => {\n    setClickCount(prevClickCount => prevClickCount + 1);\n    if (clickCount === 0) {\n      showCircle();\n      setStartTime(Date.now()); \n    } else if (clickCount === 1) {\n      clearInterval(timerInterval);\n      calculateHealth();\n      // Reset all states to their initial values\n      setTimer(0);\n      setClickCount(0);\n    } \n  };\n  \n  \n\n  const showCircle = () => {\n    const rectangle = document.querySelector('.rectangle1');\n    rectangle.innerHTML = \"<div class='inner-circle'></div>\";\n    console.log(\"show\",clickCount)\n  };\n\n  const removeCircle = () => {\n    const rectangle = document.querySelector('.rectangle1');\n    rectangle.innerHTML = `<div><h2>Lung Health</h2><p>${lungHealth}%</p></div>`;\n    console.log(\"remove\",clickCount)\n  };\n\n\n  \n  const calculateHealth = () => {\n    \n    const endTime = Date.now(); // Record the end time\n    const timeDifference = endTime - startTime; // Calculate the time difference in milliseconds\n   \n    const breathHoldingTime = Math.round(timeDifference / 100); \nconst health = Math.max(0, 100 - breathHoldingTime); // Assuming longer holding time is healthier\n    console.log('Breath Holding Time:', breathHoldingTime,timeDifference);\n\n    setLungHealth(health);\n    removeCircle();\n    console.log('Lung Health:', health,lungHealth);\n    \n    const rectangle = document.querySelector('.rectangle1');\n    rectangle.classList.remove('green', 'orange', 'red');\n  \n    if (lungHealth >= 80) {\n      rectangle.classList.add('green');\n    } else if (lungHealth >= 50 && lungHealth < 80) {\n      rectangle.classList.add('orange');\n    } else {\n      rectangle.classList.add('red');\n    }\n  };\n\n  const fetchBasicInfo = async () => {\n    try {\n      const response = await axios.get(`http://localhost:5000/api/${userId}/check_basic_info`);\n      const basicInfoData = response.data;\n      console.log('Basic Info Data:', basicInfoData);\n      // Assuming basic info is an object\n      if (basicInfoData) {\n        console.log('Age:', basicInfoData.age);\n        console.log('Height:', basicInfoData.height);\n        console.log('Weight:', basicInfoData.weight);\n        // Assuming you have state variables to set age, height, and weight\n        setAge(basicInfoData.age);\n        setHeight(basicInfoData.height);\n        setWeight(basicInfoData.weight);\n        setShowBasicInfo(true);\n      }\n    } catch (error) {\n      console.error('Error fetching basic info:', error);\n      // Handle error\n    }\n  };\n  const fetchBloodType = async () => {\n    try {\n      const response = await axios.get(`http://localhost:5000/api/${userId}/check_Bloodtype`);\n      const bloodTypeData = response.data;\n      console.log('Blood Type Data:', bloodTypeData);\n      if (bloodTypeData.length > 0) {\n        const firstBloodType = bloodTypeData[0];\n        console.log('Blood Type:', firstBloodType.bloodtype);\n        setBloodType(firstBloodType.bloodtype);\n      }\n    } catch (error) {\n      console.error('Error fetching blood type:', error);\n      // Handle error\n    }\n  };\n  \n\n  useEffect(() => {\n    \n    fetchBloodType();\n    fetchBasicInfo();\n\n  }, [userId]);\n\n  const handleBloodTypeUpdate = async (event) => {\n    const selectedBloodType = event.target.value;\n    setBloodType(selectedBloodType);\n    console.log('Selected blood type:', userId, selectedBloodType);\n    try {\n      const response = await axios.post(`http://localhost:5000/api/${userId}/post_Bloodtype`, {\n        userId: userId,\n        bloodType: selectedBloodType\n      });\n\n      console.log('Blood type updated successfully:', response.data);\n\n    } catch (error) {\n      console.error('Error from stats updating blood type:', error);\n      // Handle error\n    }\n  };\n\n  const handleBasicInfoUpdates = async () => {\n    \n    try {\n      const response = await axios.post(`http://localhost:5000/api/${userId}/post_basic_info`, {\n        userId: userId,\n        age: age,\n        height: height,\n        weight: weight\n      });\n\n      console.log('Basic Info Updated successfully:', response.data);\n\n    } catch (error) {\n      console.error('Error from stats updating Basic Info:', error);\n      // Handle error\n    }\n  };\n\n  const handleBasicInfoClick = () => {\n\n    if(showBasicInfo==true)\n      {\n        let BMI=weight/(height*height);\n        let basic=document.getElementById('basic-info');\n    basic.innerHTML=`<p><strong>Age</strong>: <em>${age} years</em></p>\n    <p><strong>Height</strong>: <em>${height} metres</em></p>\n    <p><strong>Weight</strong>:<em> ${weight} KGs</em></p>\n    <p><strong>BMI</strong>:<em> ${BMI}</em></p>`;\n      }\n      else{\n    setShowBasicForm(true);\n      }\n  };\nconst handleinfo = async () => {\n\n};\n\nconst handleKeyPress = (e) => {\n  if (e.key === 'Enter') {\n    let BMI=weight/(height*height);\n    console.log(age, height, weight)\n    let form=document.getElementById('basicform');\n    form.style.display='none';\n    let basic=document.getElementById('basic');\n    basic.innerHTML=`<p><strong>Age</strong>: <em>${age} years</em></p>\n    <p><strong>Height</strong>: <em>${height} metres</em></p>\n    <p><strong>Weight</strong>:<em> ${weight} KGs</em></p>\n    <p><strong>BMI</strong>:<em> ${BMI}</em></p>`;\n    handleBasicInfoUpdates();\n  }\n};\n  return (\n    <div>\n    <div className='holder'>\n      {bloodtype ? (\n        <div>\n          <div className=\"blood circle d-flex align-items-center justify-content-center text-white animation-enabled\">\n            <p className='inner-p'>{bloodtype}</p>\n          </div>\n          <h2 style={{ color: 'black' }}> Blood Type </h2>\n        </div>\n      ) : (\n        <div>\n        <Select\n  value={bloodtype}\n  onChange={handleBloodTypeUpdate}\n  displayEmpty\n  sx={{ bgcolor: '#007bff', color: 'white'}}\n>\n  <MenuItem value=\"\" disabled>\n    Select Blood Type\n  </MenuItem>\n  <MenuItem value='A+'>A+</MenuItem>\n  <MenuItem value='A-'>A-</MenuItem>\n  <MenuItem value='B+'>B+</MenuItem>\n  <MenuItem value='B-'>B-</MenuItem>\n  <MenuItem value='AB+'>AB+</MenuItem>\n  <MenuItem value='AB-'>AB-</MenuItem>\n  <MenuItem value='O+'>O+</MenuItem>\n  <MenuItem value='O-'>O-</MenuItem>\n</Select>\n    <div>\n      <div className=\"blood circle d-flex align-items-center justify-content-center text-white\">\n        <p className='inner-p'>{bloodtype}</p>\n      </div>\n    </div>\n  </div>\n\n      )}\n\n      <div className=\"rectangle1\" onClick={checkLungs}>\n        <div>\n          {boolval ? (\n            <div>\n              <h2 style={{ color: 'black' }}>Lung Health</h2>\n              <p className='health'>{lungHealth}%</p>\n            </div>\n          ) : (\n            <div>\n              <h2 style={{ color: 'black' }}>Lung Health</h2>\n              <p className='health'>Click to check.<br></br>\n              <strong>Click again Until you can Hold your breath</strong>\n              </p>\n            </div>\n          )}\n        </div>\n      </div>\n      <div className=\"rectangle2\" onClick={handleBasicInfoClick}>\n      {showBasicForm ? (\n        <div id='basic'>\n        <form id='basicform' onKeyPress={handleKeyPress}>\n              <input\n                type=\"number\"\n                placeholder=\"Age (Years)\"\n                value={age}\n                required\n                onChange={(e) => setAge(e.target.value)}\n              />\n              <input\n                type=\"number\"\n                placeholder=\"Height (Metres)\"\n                value={height}\n                required\n                onChange={(e) => setHeight(e.target.value)}\n              />\n              <input\n                type=\"number\"\n                placeholder=\"Weight (KGs)\"\n                value={weight}\n                required\n                onChange={(e) => setWeight(e.target.value)}\n              />\n\n            </form>\n        </div>\n          ) : (\n            <div id='basic-info'>\n            <div style={{ textAlign: 'center', fontSize: '2rem', fontWeight: 'bold' }}><em>Basic Info</em></div>\n            </div>\n          )}\n          </div>\n    </div>\n<TestResult userId={userId} />\n    </div>\n  );\n};\n\nexport default Stats;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}