{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Inspire Uplift\\\\Desktop\\\\web\\\\healthmanagementsystem\\\\Health-Management-System-main\\\\client\\\\src\\\\components\\\\auth\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Box from '@mui/material/Box';\nimport { makeStyles } from '@mui/styles';\nimport Typography from '@mui/material/Typography';\nimport { setAuthToken } from '../../utils/auth';\nimport { buildApiUrl } from '../../config/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    minHeight: '100vh',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#001f3f' // Navy blue background color\n  },\n  card: {\n    backgroundColor: '#f5f5f5',\n    // Light background color\n    boxShadow: '0px 0px 20px rgba(0, 0, 0, 0.1)',\n    // Box shadow for modern look\n    borderRadius: '10px',\n    // Rounded corners for modern look\n    maxWidth: '400px',\n    // Limit width for better readability on large screens\n    padding: '20px',\n    // Add padding for better spacing\n    textAlign: 'center',\n    // Center text content\n    transition: 'transform 0.3s ease-in-out',\n    // Smooth transition for hover effect\n    '&:hover': {\n      transform: 'scale(1.05)' // Scale up the card on hover\n    }\n  }\n});\nconst Login = ({\n  selectedOption\n}) => {\n  _s();\n  const classes = useStyles();\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n  const [error, setError] = useState('');\n  const [debugInfo, setDebugInfo] = useState({});\n  const navigate = useNavigate();\n  const handleLogin = async e => {\n    e.preventDefault();\n    setError('');\n    setDebugInfo({\n      formData,\n      status: 'Submitting...',\n      timestamp: new Date().toISOString()\n    });\n    try {\n      console.log('Attempting login with:', formData);\n\n      // Add timeout to prevent hanging requests\n      const controller = new AbortController();\n      const timeoutId = setTimeout(() => controller.abort(), 10000);\n      const response = await axios.post(buildApiUrl('/api/login'), formData, {\n        signal: controller.signal,\n        timeout: 10000\n      });\n      clearTimeout(timeoutId);\n      console.log('Login response received:', response.data);\n      setDebugInfo(prev => ({\n        ...prev,\n        response: response.data,\n        status: 'Response received',\n        statusCode: response.status,\n        timestamp: new Date().toISOString()\n      }));\n      if (!response.data.token) {\n        console.error('No token in response:', response.data);\n        setDebugInfo(prev => ({\n          ...prev,\n          error: 'No token in response',\n          status: 'Error: No token'\n        }));\n        throw new Error('No token received from server');\n      }\n\n      // Store token and user role\n      localStorage.setItem('token', response.data.token);\n      const userRole = response.data.user.role === 'Patient' ? 'client' : response.data.user.role.toLowerCase();\n      localStorage.setItem('userRole', userRole);\n\n      // Set the auth token for future requests\n      setAuthToken(response.data.token);\n      console.log('Authentication successful, redirecting...');\n      console.log('User role from server:', response.data.user.role);\n      console.log('Mapped user role for localStorage:', userRole);\n      setDebugInfo(prev => ({\n        ...prev,\n        status: 'Authentication successful'\n      }));\n\n      // Map roles to their corresponding profile routes\n      const roleToRoute = {\n        'Admin': 'AdminProfile',\n        'Doctor': 'DoctorProfile',\n        'Patient': 'ClientProfile'\n      };\n      const redirectPath = `/${roleToRoute[response.data.user.role]}`;\n      console.log('Redirect path:', redirectPath);\n      if (!redirectPath) {\n        throw new Error('Invalid user role');\n      }\n\n      // Navigate to the appropriate profile page\n      console.log('Navigating to:', redirectPath);\n      navigate(redirectPath);\n    } catch (error) {\n      var _error$response, _error$response2, _error$response3;\n      console.error('Login error:', error);\n\n      // Enhanced error handling\n      const errorInfo = {\n        message: error.message,\n        name: error.name,\n        isAxiosError: error.isAxiosError || false,\n        status: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status,\n        statusText: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.statusText,\n        responseData: (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data,\n        isTimeout: error.code === 'ECONNABORTED' || error.name === 'AbortError'\n      };\n      setDebugInfo(prev => ({\n        ...prev,\n        error: errorInfo,\n        status: 'Error',\n        timestamp: new Date().toISOString()\n      }));\n\n      // Set appropriate error message\n      if (errorInfo.isTimeout) {\n        setError('Request timed out. Please check your internet connection or try again later.');\n      } else if (error.response) {\n        var _error$response$data;\n        setError(((_error$response$data = error.response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed. Please check your credentials.');\n      } else if (error.request) {\n        setError('No response from server. Please check your internet connection.');\n      } else {\n        setError('Login failed. Please check your credentials.');\n      }\n    }\n  };\n  const handleSignup = () => {\n    let optval = \"/\" + selectedOption + \"Signup\";\n    console.log(optval);\n    navigate(optval, {\n      replace: true\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.card,\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h1\",\n          style: {\n            color: '#1976d2',\n            marginBottom: '20px',\n            fontSize: '35px'\n          },\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          mb: 2,\n          p: 2,\n          style: {\n            background: '#fffbe6',\n            border: '1px solid #ffe58f',\n            borderRadius: 8,\n            fontSize: 12,\n            color: '#ad6800',\n            marginBottom: 20,\n            wordBreak: 'break-all'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Debug Info:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            style: {\n              whiteSpace: 'pre-wrap',\n              margin: 0\n            },\n            children: JSON.stringify(debugInfo, null, 2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this), error && /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"error\",\n          style: {\n            marginBottom: '20px'\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleLogin,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"email\",\n              label: \"Email\",\n              type: \"email\",\n              value: formData.email,\n              onChange: e => setFormData({\n                ...formData,\n                email: e.target.value\n              }),\n              required: true,\n              fullWidth: true,\n              margin: \"normal\",\n              autoComplete: \"email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              id: \"password\",\n              label: \"Password\",\n              type: \"password\",\n              value: formData.password,\n              onChange: e => setFormData({\n                ...formData,\n                password: e.target.value\n              }),\n              required: true,\n              fullWidth: true,\n              margin: \"normal\",\n              autoComplete: \"current-password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            fullWidth: true,\n            style: {\n              marginTop: '20px'\n            },\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            onClick: handleSignup,\n            fullWidth: true,\n            style: {\n              marginTop: '11px'\n            },\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"JIi7UJDqKWC5MTwhEc/jw5IDs10=\", false, function () {\n  return [useStyles, useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","axios","Link","useNavigate","Button","TextField","Card","CardContent","Box","makeStyles","Typography","setAuthToken","buildApiUrl","jsxDEV","_jsxDEV","useStyles","root","minHeight","display","justifyContent","alignItems","backgroundColor","card","boxShadow","borderRadius","maxWidth","padding","textAlign","transition","transform","Login","selectedOption","_s","classes","formData","setFormData","email","password","error","setError","debugInfo","setDebugInfo","navigate","handleLogin","e","preventDefault","status","timestamp","Date","toISOString","console","log","controller","AbortController","timeoutId","setTimeout","abort","response","post","signal","timeout","clearTimeout","data","prev","statusCode","token","Error","localStorage","setItem","userRole","user","role","toLowerCase","roleToRoute","redirectPath","_error$response","_error$response2","_error$response3","errorInfo","message","name","isAxiosError","statusText","responseData","isTimeout","code","_error$response$data","request","handleSignup","optval","replace","className","children","variant","style","color","marginBottom","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","mb","p","background","border","wordBreak","whiteSpace","margin","JSON","stringify","onSubmit","id","label","type","value","onChange","target","required","fullWidth","autoComplete","marginTop","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Inspire Uplift/Desktop/web/healthmanagementsystem/Health-Management-System-main/client/src/components/auth/Login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Box from '@mui/material/Box';\nimport { makeStyles } from '@mui/styles';\nimport Typography from '@mui/material/Typography';\nimport { setAuthToken } from '../../utils/auth';\nimport { buildApiUrl } from '../../config/api';\n\nconst useStyles = makeStyles({\n    root: {\n      minHeight: '100vh',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      backgroundColor: '#001f3f', // Navy blue background color\n    },\n    card: {\n      backgroundColor: '#f5f5f5', // Light background color\n      boxShadow: '0px 0px 20px rgba(0, 0, 0, 0.1)', // Box shadow for modern look\n      borderRadius: '10px', // Rounded corners for modern look\n      maxWidth: '400px', // Limit width for better readability on large screens\n      padding: '20px', // Add padding for better spacing\n      textAlign: 'center', // Center text content\n      transition: 'transform 0.3s ease-in-out', // Smooth transition for hover effect\n      '&:hover': {\n        transform: 'scale(1.05)', // Scale up the card on hover\n      },\n    },\n  });\n  \n\nconst Login = ({ selectedOption }) => {\n    const classes = useStyles();\n    const [formData, setFormData] = useState({\n        email: '',\n        password: ''\n    });\n    const [error, setError] = useState('');\n    const [debugInfo, setDebugInfo] = useState({});\n\n    const navigate = useNavigate();\n\n    const handleLogin = async (e) => {\n        e.preventDefault();\n        setError('');\n        setDebugInfo({ formData, status: 'Submitting...', timestamp: new Date().toISOString() });\n        \n        try {\n            console.log('Attempting login with:', formData);\n            \n            // Add timeout to prevent hanging requests\n            const controller = new AbortController();\n            const timeoutId = setTimeout(() => controller.abort(), 10000);\n            \n            const response = await axios.post(buildApiUrl('/api/login'), formData, {\n                signal: controller.signal,\n                timeout: 10000\n            });\n            \n            clearTimeout(timeoutId);\n            \n            console.log('Login response received:', response.data);\n            setDebugInfo(prev => ({ \n                ...prev, \n                response: response.data, \n                status: 'Response received', \n                statusCode: response.status,\n                timestamp: new Date().toISOString()\n            }));\n            \n            if (!response.data.token) {\n                console.error('No token in response:', response.data);\n                setDebugInfo(prev => ({ \n                    ...prev, \n                    error: 'No token in response', \n                    status: 'Error: No token' \n                }));\n                throw new Error('No token received from server');\n            }\n\n            // Store token and user role\n            localStorage.setItem('token', response.data.token);\n            const userRole = response.data.user.role === 'Patient' ? 'client' : response.data.user.role.toLowerCase();\n            localStorage.setItem('userRole', userRole);\n            \n            // Set the auth token for future requests\n            setAuthToken(response.data.token);\n            \n            console.log('Authentication successful, redirecting...');\n            console.log('User role from server:', response.data.user.role);\n            console.log('Mapped user role for localStorage:', userRole);\n            setDebugInfo(prev => ({ ...prev, status: 'Authentication successful' }));\n            \n            // Map roles to their corresponding profile routes\n            const roleToRoute = {\n                'Admin': 'AdminProfile',\n                'Doctor': 'DoctorProfile',\n                'Patient': 'ClientProfile'\n            };\n            \n            const redirectPath = `/${roleToRoute[response.data.user.role]}`;\n            console.log('Redirect path:', redirectPath);\n            \n            if (!redirectPath) {\n                throw new Error('Invalid user role');\n            }\n            \n            // Navigate to the appropriate profile page\n            console.log('Navigating to:', redirectPath);\n            navigate(redirectPath);\n            \n        } catch (error) {\n            console.error('Login error:', error);\n            \n            // Enhanced error handling\n            const errorInfo = {\n                message: error.message,\n                name: error.name,\n                isAxiosError: error.isAxiosError || false,\n                status: error.response?.status,\n                statusText: error.response?.statusText,\n                responseData: error.response?.data,\n                isTimeout: error.code === 'ECONNABORTED' || error.name === 'AbortError'\n            };\n            \n            setDebugInfo(prev => ({\n                ...prev,\n                error: errorInfo,\n                status: 'Error',\n                timestamp: new Date().toISOString()\n            }));\n            \n            // Set appropriate error message\n            if (errorInfo.isTimeout) {\n                setError('Request timed out. Please check your internet connection or try again later.');\n            } else if (error.response) {\n                setError(error.response.data?.message || 'Login failed. Please check your credentials.');\n            } else if (error.request) {\n                setError('No response from server. Please check your internet connection.');\n            } else {\n                setError('Login failed. Please check your credentials.');\n            }\n        }\n    };\n\n    const handleSignup = () => {\n        let optval = \"/\" + selectedOption + \"Signup\";\n        console.log(optval);\n        navigate(optval, { replace: true });\n    };\n\n    return (\n        <div className={classes.root}>\n            <Card className={classes.card}>\n                <CardContent>\n                    <Typography variant=\"h1\" style={{ color: '#1976d2', marginBottom: '20px', fontSize:'35px' }}>\n                        Login\n                    </Typography>\n                    {/* Debugging Box */}\n                    <Box mb={2} p={2} style={{ background: '#fffbe6', border: '1px solid #ffe58f', borderRadius: 8, fontSize: 12, color: '#ad6800', marginBottom: 20, wordBreak: 'break-all' }}>\n                        <b>Debug Info:</b>\n                        <pre style={{ whiteSpace: 'pre-wrap', margin: 0 }}>{JSON.stringify(debugInfo, null, 2)}</pre>\n                    </Box>\n                    {error && (\n                        <Typography color=\"error\" style={{ marginBottom: '20px' }}>\n                            {error}\n                        </Typography>\n                    )}\n                    <form onSubmit={handleLogin}>\n                        <div>\n                            <TextField\n                                id=\"email\"\n                                label=\"Email\"\n                                type=\"email\"\n                                value={formData.email}\n                                onChange={(e) => setFormData({ ...formData, email: e.target.value })}\n                                required\n                                fullWidth\n                                margin=\"normal\"\n                                autoComplete=\"email\"\n                            />\n                        </div>\n                        <div>\n                            <TextField\n                                id=\"password\"\n                                label=\"Password\"\n                                type=\"password\"\n                                value={formData.password}\n                                onChange={(e) => setFormData({ ...formData, password: e.target.value })}\n                                required\n                                fullWidth\n                                margin=\"normal\"\n                                autoComplete=\"current-password\"\n                            />\n                        </div>\n                        <Button \n                            type=\"submit\" \n                            variant=\"contained\" \n                            fullWidth\n                            style={{marginTop:'20px'}}\n                        >\n                            Login\n                        </Button>\n                        <Button \n                            variant=\"outlined\" \n                            onClick={handleSignup} \n                            fullWidth\n                            style={{marginTop:'11px'}}\n                        >\n                            Sign Up\n                        </Button>\n                    </form>\n                </CardContent>\n            </Card>\n        </div>\n    );\n};\n\nexport default Login;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,GAAG,MAAM,mBAAmB;AACnC,SAASC,UAAU,QAAQ,aAAa;AACxC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,YAAY,QAAQ,kBAAkB;AAC/C,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,SAAS,GAAGN,UAAU,CAAC;EACzBO,IAAI,EAAE;IACJC,SAAS,EAAE,OAAO;IAClBC,OAAO,EAAE,MAAM;IACfC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBC,eAAe,EAAE,SAAS,CAAE;EAC9B,CAAC;EACDC,IAAI,EAAE;IACJD,eAAe,EAAE,SAAS;IAAE;IAC5BE,SAAS,EAAE,iCAAiC;IAAE;IAC9CC,YAAY,EAAE,MAAM;IAAE;IACtBC,QAAQ,EAAE,OAAO;IAAE;IACnBC,OAAO,EAAE,MAAM;IAAE;IACjBC,SAAS,EAAE,QAAQ;IAAE;IACrBC,UAAU,EAAE,4BAA4B;IAAE;IAC1C,SAAS,EAAE;MACTC,SAAS,EAAE,aAAa,CAAE;IAC5B;EACF;AACF,CAAC,CAAC;AAGJ,MAAMC,KAAK,GAAGA,CAAC;EAAEC;AAAe,CAAC,KAAK;EAAAC,EAAA;EAClC,MAAMC,OAAO,GAAGlB,SAAS,CAAC,CAAC;EAC3B,MAAM,CAACmB,QAAQ,EAAEC,WAAW,CAAC,GAAGnC,QAAQ,CAAC;IACrCoC,KAAK,EAAE,EAAE;IACTC,QAAQ,EAAE;EACd,CAAC,CAAC;EACF,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGvC,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACwC,SAAS,EAAEC,YAAY,CAAC,GAAGzC,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE9C,MAAM0C,QAAQ,GAAGvC,WAAW,CAAC,CAAC;EAE9B,MAAMwC,WAAW,GAAG,MAAOC,CAAC,IAAK;IAC7BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBN,QAAQ,CAAC,EAAE,CAAC;IACZE,YAAY,CAAC;MAAEP,QAAQ;MAAEY,MAAM,EAAE,eAAe;MAAEC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;IAAE,CAAC,CAAC;IAExF,IAAI;MACAC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEjB,QAAQ,CAAC;;MAE/C;MACA,MAAMkB,UAAU,GAAG,IAAIC,eAAe,CAAC,CAAC;MACxC,MAAMC,SAAS,GAAGC,UAAU,CAAC,MAAMH,UAAU,CAACI,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC;MAE7D,MAAMC,QAAQ,GAAG,MAAMxD,KAAK,CAACyD,IAAI,CAAC9C,WAAW,CAAC,YAAY,CAAC,EAAEsB,QAAQ,EAAE;QACnEyB,MAAM,EAAEP,UAAU,CAACO,MAAM;QACzBC,OAAO,EAAE;MACb,CAAC,CAAC;MAEFC,YAAY,CAACP,SAAS,CAAC;MAEvBJ,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEM,QAAQ,CAACK,IAAI,CAAC;MACtDrB,YAAY,CAACsB,IAAI,KAAK;QAClB,GAAGA,IAAI;QACPN,QAAQ,EAAEA,QAAQ,CAACK,IAAI;QACvBhB,MAAM,EAAE,mBAAmB;QAC3BkB,UAAU,EAAEP,QAAQ,CAACX,MAAM;QAC3BC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;MACtC,CAAC,CAAC,CAAC;MAEH,IAAI,CAACQ,QAAQ,CAACK,IAAI,CAACG,KAAK,EAAE;QACtBf,OAAO,CAACZ,KAAK,CAAC,uBAAuB,EAAEmB,QAAQ,CAACK,IAAI,CAAC;QACrDrB,YAAY,CAACsB,IAAI,KAAK;UAClB,GAAGA,IAAI;UACPzB,KAAK,EAAE,sBAAsB;UAC7BQ,MAAM,EAAE;QACZ,CAAC,CAAC,CAAC;QACH,MAAM,IAAIoB,KAAK,CAAC,+BAA+B,CAAC;MACpD;;MAEA;MACAC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEX,QAAQ,CAACK,IAAI,CAACG,KAAK,CAAC;MAClD,MAAMI,QAAQ,GAAGZ,QAAQ,CAACK,IAAI,CAACQ,IAAI,CAACC,IAAI,KAAK,SAAS,GAAG,QAAQ,GAAGd,QAAQ,CAACK,IAAI,CAACQ,IAAI,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC;MACzGL,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEC,QAAQ,CAAC;;MAE1C;MACA1D,YAAY,CAAC8C,QAAQ,CAACK,IAAI,CAACG,KAAK,CAAC;MAEjCf,OAAO,CAACC,GAAG,CAAC,2CAA2C,CAAC;MACxDD,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEM,QAAQ,CAACK,IAAI,CAACQ,IAAI,CAACC,IAAI,CAAC;MAC9DrB,OAAO,CAACC,GAAG,CAAC,oCAAoC,EAAEkB,QAAQ,CAAC;MAC3D5B,YAAY,CAACsB,IAAI,KAAK;QAAE,GAAGA,IAAI;QAAEjB,MAAM,EAAE;MAA4B,CAAC,CAAC,CAAC;;MAExE;MACA,MAAM2B,WAAW,GAAG;QAChB,OAAO,EAAE,cAAc;QACvB,QAAQ,EAAE,eAAe;QACzB,SAAS,EAAE;MACf,CAAC;MAED,MAAMC,YAAY,GAAG,IAAID,WAAW,CAAChB,QAAQ,CAACK,IAAI,CAACQ,IAAI,CAACC,IAAI,CAAC,EAAE;MAC/DrB,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEuB,YAAY,CAAC;MAE3C,IAAI,CAACA,YAAY,EAAE;QACf,MAAM,IAAIR,KAAK,CAAC,mBAAmB,CAAC;MACxC;;MAEA;MACAhB,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEuB,YAAY,CAAC;MAC3ChC,QAAQ,CAACgC,YAAY,CAAC;IAE1B,CAAC,CAAC,OAAOpC,KAAK,EAAE;MAAA,IAAAqC,eAAA,EAAAC,gBAAA,EAAAC,gBAAA;MACZ3B,OAAO,CAACZ,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;;MAEpC;MACA,MAAMwC,SAAS,GAAG;QACdC,OAAO,EAAEzC,KAAK,CAACyC,OAAO;QACtBC,IAAI,EAAE1C,KAAK,CAAC0C,IAAI;QAChBC,YAAY,EAAE3C,KAAK,CAAC2C,YAAY,IAAI,KAAK;QACzCnC,MAAM,GAAA6B,eAAA,GAAErC,KAAK,CAACmB,QAAQ,cAAAkB,eAAA,uBAAdA,eAAA,CAAgB7B,MAAM;QAC9BoC,UAAU,GAAAN,gBAAA,GAAEtC,KAAK,CAACmB,QAAQ,cAAAmB,gBAAA,uBAAdA,gBAAA,CAAgBM,UAAU;QACtCC,YAAY,GAAAN,gBAAA,GAAEvC,KAAK,CAACmB,QAAQ,cAAAoB,gBAAA,uBAAdA,gBAAA,CAAgBf,IAAI;QAClCsB,SAAS,EAAE9C,KAAK,CAAC+C,IAAI,KAAK,cAAc,IAAI/C,KAAK,CAAC0C,IAAI,KAAK;MAC/D,CAAC;MAEDvC,YAAY,CAACsB,IAAI,KAAK;QAClB,GAAGA,IAAI;QACPzB,KAAK,EAAEwC,SAAS;QAChBhC,MAAM,EAAE,OAAO;QACfC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;MACtC,CAAC,CAAC,CAAC;;MAEH;MACA,IAAI6B,SAAS,CAACM,SAAS,EAAE;QACrB7C,QAAQ,CAAC,8EAA8E,CAAC;MAC5F,CAAC,MAAM,IAAID,KAAK,CAACmB,QAAQ,EAAE;QAAA,IAAA6B,oBAAA;QACvB/C,QAAQ,CAAC,EAAA+C,oBAAA,GAAAhD,KAAK,CAACmB,QAAQ,CAACK,IAAI,cAAAwB,oBAAA,uBAAnBA,oBAAA,CAAqBP,OAAO,KAAI,8CAA8C,CAAC;MAC5F,CAAC,MAAM,IAAIzC,KAAK,CAACiD,OAAO,EAAE;QACtBhD,QAAQ,CAAC,iEAAiE,CAAC;MAC/E,CAAC,MAAM;QACHA,QAAQ,CAAC,8CAA8C,CAAC;MAC5D;IACJ;EACJ,CAAC;EAED,MAAMiD,YAAY,GAAGA,CAAA,KAAM;IACvB,IAAIC,MAAM,GAAG,GAAG,GAAG1D,cAAc,GAAG,QAAQ;IAC5CmB,OAAO,CAACC,GAAG,CAACsC,MAAM,CAAC;IACnB/C,QAAQ,CAAC+C,MAAM,EAAE;MAAEC,OAAO,EAAE;IAAK,CAAC,CAAC;EACvC,CAAC;EAED,oBACI5E,OAAA;IAAK6E,SAAS,EAAE1D,OAAO,CAACjB,IAAK;IAAA4E,QAAA,eACzB9E,OAAA,CAACR,IAAI;MAACqF,SAAS,EAAE1D,OAAO,CAACX,IAAK;MAAAsE,QAAA,eAC1B9E,OAAA,CAACP,WAAW;QAAAqF,QAAA,gBACR9E,OAAA,CAACJ,UAAU;UAACmF,OAAO,EAAC,IAAI;UAACC,KAAK,EAAE;YAAEC,KAAK,EAAE,SAAS;YAAEC,YAAY,EAAE,MAAM;YAAEC,QAAQ,EAAC;UAAO,CAAE;UAAAL,QAAA,EAAC;QAE7F;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eAEbvF,OAAA,CAACN,GAAG;UAAC8F,EAAE,EAAE,CAAE;UAACC,CAAC,EAAE,CAAE;UAACT,KAAK,EAAE;YAAEU,UAAU,EAAE,SAAS;YAAEC,MAAM,EAAE,mBAAmB;YAAEjF,YAAY,EAAE,CAAC;YAAEyE,QAAQ,EAAE,EAAE;YAAEF,KAAK,EAAE,SAAS;YAAEC,YAAY,EAAE,EAAE;YAAEU,SAAS,EAAE;UAAY,CAAE;UAAAd,QAAA,gBACvK9E,OAAA;YAAA8E,QAAA,EAAG;UAAW;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eAClBvF,OAAA;YAAKgF,KAAK,EAAE;cAAEa,UAAU,EAAE,UAAU;cAAEC,MAAM,EAAE;YAAE,CAAE;YAAAhB,QAAA,EAAEiB,IAAI,CAACC,SAAS,CAACtE,SAAS,EAAE,IAAI,EAAE,CAAC;UAAC;YAAA0D,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5F,CAAC,EACL/D,KAAK,iBACFxB,OAAA,CAACJ,UAAU;UAACqF,KAAK,EAAC,OAAO;UAACD,KAAK,EAAE;YAAEE,YAAY,EAAE;UAAO,CAAE;UAAAJ,QAAA,EACrDtD;QAAK;UAAA4D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CACf,eACDvF,OAAA;UAAMiG,QAAQ,EAAEpE,WAAY;UAAAiD,QAAA,gBACxB9E,OAAA;YAAA8E,QAAA,eACI9E,OAAA,CAACT,SAAS;cACN2G,EAAE,EAAC,OAAO;cACVC,KAAK,EAAC,OAAO;cACbC,IAAI,EAAC,OAAO;cACZC,KAAK,EAAEjF,QAAQ,CAACE,KAAM;cACtBgF,QAAQ,EAAGxE,CAAC,IAAKT,WAAW,CAAC;gBAAE,GAAGD,QAAQ;gBAAEE,KAAK,EAAEQ,CAAC,CAACyE,MAAM,CAACF;cAAM,CAAC,CAAE;cACrEG,QAAQ;cACRC,SAAS;cACTX,MAAM,EAAC,QAAQ;cACfY,YAAY,EAAC;YAAO;cAAAtB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACvB;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD,CAAC,eACNvF,OAAA;YAAA8E,QAAA,eACI9E,OAAA,CAACT,SAAS;cACN2G,EAAE,EAAC,UAAU;cACbC,KAAK,EAAC,UAAU;cAChBC,IAAI,EAAC,UAAU;cACfC,KAAK,EAAEjF,QAAQ,CAACG,QAAS;cACzB+E,QAAQ,EAAGxE,CAAC,IAAKT,WAAW,CAAC;gBAAE,GAAGD,QAAQ;gBAAEG,QAAQ,EAAEO,CAAC,CAACyE,MAAM,CAACF;cAAM,CAAC,CAAE;cACxEG,QAAQ;cACRC,SAAS;cACTX,MAAM,EAAC,QAAQ;cACfY,YAAY,EAAC;YAAkB;cAAAtB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD,CAAC,eACNvF,OAAA,CAACV,MAAM;YACH8G,IAAI,EAAC,QAAQ;YACbrB,OAAO,EAAC,WAAW;YACnB0B,SAAS;YACTzB,KAAK,EAAE;cAAC2B,SAAS,EAAC;YAAM,CAAE;YAAA7B,QAAA,EAC7B;UAED;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACTvF,OAAA,CAACV,MAAM;YACHyF,OAAO,EAAC,UAAU;YAClB6B,OAAO,EAAElC,YAAa;YACtB+B,SAAS;YACTzB,KAAK,EAAE;cAAC2B,SAAS,EAAC;YAAM,CAAE;YAAA7B,QAAA,EAC7B;UAED;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACP,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd,CAAC;AAACrE,EAAA,CAzLIF,KAAK;EAAA,QACSf,SAAS,EAQRZ,WAAW;AAAA;AAAAwH,EAAA,GAT1B7F,KAAK;AA2LX,eAAeA,KAAK;AAAC,IAAA6F,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}