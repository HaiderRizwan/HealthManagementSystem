{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Inspire Uplift\\\\Desktop\\\\web\\\\healthmanagementsystem\\\\Health-Management-System-main\\\\client\\\\src\\\\components\\\\profiles\\\\Client\\\\ClientBookAppointment.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, Typography, Button, Paper, TextField, Stack, Alert } from '@mui/material';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\nimport { styled } from '@mui/material/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledPaper = styled(Paper)(({\n  theme\n}) => ({\n  padding: theme.spacing(3),\n  borderRadius: theme.spacing(2),\n  boxShadow: '0 4px 20px rgba(0, 0, 0, 0.1)',\n  maxWidth: 400,\n  margin: 'auto',\n  backgroundColor: '#ffffff'\n}));\n_c = StyledPaper;\nconst StyledButton = styled(Button)(({\n  theme\n}) => ({\n  borderRadius: theme.spacing(1),\n  padding: theme.spacing(1, 3),\n  textTransform: 'none',\n  fontWeight: 600,\n  boxShadow: 'none',\n  '&:hover': {\n    boxShadow: '0 4px 12px rgba(0, 0, 0, 0.1)'\n  }\n}));\n_c2 = StyledButton;\nconst ClientBookAppointment = ({\n  doctor,\n  availableDates,\n  userId,\n  onBookAppointment,\n  onCancel,\n  onDateSelect\n}) => {\n  _s();\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [error, setError] = useState('');\n  const handleDateChange = date => {\n    setError('');\n    // Convert date to string format expected by the backend\n    const formattedDate = date ? date.toISOString().split('T')[0] : null;\n    if (formattedDate) {\n      // Check if the selected date is in availableDates\n      if (availableDates.includes(formattedDate)) {\n        setSelectedDate(date);\n        onDateSelect(formattedDate);\n      } else {\n        setError('Selected date is not available. Please choose another date.');\n        setSelectedDate(null);\n      }\n    }\n  };\n  const handleBookAppointmentClick = () => {\n    if (!selectedDate) {\n      setError('Please select a date for the appointment');\n      return;\n    }\n    const currentDate = new Date();\n    if (selectedDate < currentDate) {\n      setError('Please select a future date for the appointment');\n      return;\n    }\n    onBookAppointment({\n      client_id: userId\n    });\n    setSelectedDate(null);\n  };\n\n  // Convert availableDates strings to Date objects for comparison\n  const availableDateObjects = availableDates.map(dateStr => new Date(dateStr));\n  return /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n    dateAdapter: AdapterDateFns,\n    children: /*#__PURE__*/_jsxDEV(StyledPaper, {\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          fontWeight: \"600\",\n          color: \"primary\",\n          children: \"Book Appointment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            gutterBottom: true,\n            fontWeight: \"500\",\n            children: [\"Doctor: \", doctor.user.fullName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.secondary\",\n            children: \"Please select an available date for your appointment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n          label: \"Appointment Date\",\n          value: selectedDate,\n          onChange: handleDateChange,\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n            ...params,\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 38\n          }, this),\n          minDate: new Date(),\n          shouldDisableDate: date => !availableDateObjects.some(availableDate => availableDate.toDateString() === date.toDateString())\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          sx: {\n            borderRadius: 2\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            gap: 2,\n            justifyContent: 'flex-end'\n          },\n          children: [/*#__PURE__*/_jsxDEV(StyledButton, {\n            variant: \"outlined\",\n            color: \"inherit\",\n            onClick: onCancel,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StyledButton, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: handleBookAppointmentClick,\n            disabled: !selectedDate,\n            children: \"Book Appointment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(ClientBookAppointment, \"I4Vm0CjWw9AgD1mc+R4N15IrfBU=\");\n_c3 = ClientBookAppointment;\nexport default ClientBookAppointment;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"StyledPaper\");\n$RefreshReg$(_c2, \"StyledButton\");\n$RefreshReg$(_c3, \"ClientBookAppointment\");","map":{"version":3,"names":["React","useState","Box","Typography","Button","Paper","TextField","Stack","Alert","DatePicker","LocalizationProvider","AdapterDateFns","styled","jsxDEV","_jsxDEV","StyledPaper","theme","padding","spacing","borderRadius","boxShadow","maxWidth","margin","backgroundColor","_c","StyledButton","textTransform","fontWeight","_c2","ClientBookAppointment","doctor","availableDates","userId","onBookAppointment","onCancel","onDateSelect","_s","selectedDate","setSelectedDate","error","setError","handleDateChange","date","formattedDate","toISOString","split","includes","handleBookAppointmentClick","currentDate","Date","client_id","availableDateObjects","map","dateStr","dateAdapter","children","variant","color","fileName","_jsxFileName","lineNumber","columnNumber","gutterBottom","user","fullName","label","value","onChange","renderInput","params","fullWidth","minDate","shouldDisableDate","some","availableDate","toDateString","severity","sx","display","gap","justifyContent","onClick","disabled","_c3","$RefreshReg$"],"sources":["C:/Users/Inspire Uplift/Desktop/web/healthmanagementsystem/Health-Management-System-main/client/src/components/profiles/Client/ClientBookAppointment.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { \n  Box, \n  Typography, \n  Button, \n  Paper,\n  TextField,\n  Stack,\n  Alert\n} from '@mui/material';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\nimport { styled } from '@mui/material/styles';\n\nconst StyledPaper = styled(Paper)(({ theme }) => ({\n  padding: theme.spacing(3),\n  borderRadius: theme.spacing(2),\n  boxShadow: '0 4px 20px rgba(0, 0, 0, 0.1)',\n  maxWidth: 400,\n  margin: 'auto',\n  backgroundColor: '#ffffff',\n}));\n\nconst StyledButton = styled(Button)(({ theme }) => ({\n  borderRadius: theme.spacing(1),\n  padding: theme.spacing(1, 3),\n  textTransform: 'none',\n  fontWeight: 600,\n  boxShadow: 'none',\n  '&:hover': {\n    boxShadow: '0 4px 12px rgba(0, 0, 0, 0.1)',\n  },\n}));\n\nconst ClientBookAppointment = ({ doctor, availableDates, userId, onBookAppointment, onCancel, onDateSelect }) => {\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [error, setError] = useState('');\n\n  const handleDateChange = (date) => {\n    setError('');\n    // Convert date to string format expected by the backend\n    const formattedDate = date ? date.toISOString().split('T')[0] : null;\n    \n    if (formattedDate) {\n      // Check if the selected date is in availableDates\n      if (availableDates.includes(formattedDate)) {\n        setSelectedDate(date);\n        onDateSelect(formattedDate);\n      } else {\n        setError('Selected date is not available. Please choose another date.');\n        setSelectedDate(null);\n      }\n    }\n  };\n\n  const handleBookAppointmentClick = () => {\n    if (!selectedDate) {\n      setError('Please select a date for the appointment');\n      return;\n    }\n\n    const currentDate = new Date();\n    if (selectedDate < currentDate) {\n      setError('Please select a future date for the appointment');\n      return;\n    }\n\n    onBookAppointment({\n      client_id: userId,\n    });\n\n    setSelectedDate(null);\n  };\n\n  // Convert availableDates strings to Date objects for comparison\n  const availableDateObjects = availableDates.map(dateStr => new Date(dateStr));\n\n  return (\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\n      <StyledPaper>\n        <Stack spacing={3}>\n          <Typography variant=\"h5\" fontWeight=\"600\" color=\"primary\">\n            Book Appointment\n          </Typography>\n\n          <Box>\n            <Typography variant=\"subtitle1\" gutterBottom fontWeight=\"500\">\n              Doctor: {doctor.user.fullName}\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              Please select an available date for your appointment\n            </Typography>\n          </Box>\n\n          <DatePicker\n            label=\"Appointment Date\"\n            value={selectedDate}\n            onChange={handleDateChange}\n            renderInput={(params) => <TextField {...params} fullWidth />}\n            minDate={new Date()}\n            shouldDisableDate={(date) => \n              !availableDateObjects.some(availableDate => \n                availableDate.toDateString() === date.toDateString()\n              )\n            }\n          />\n\n          {error && (\n            <Alert severity=\"error\" sx={{ borderRadius: 2 }}>\n              {error}\n            </Alert>\n          )}\n\n          <Box sx={{ display: 'flex', gap: 2, justifyContent: 'flex-end' }}>\n            <StyledButton\n              variant=\"outlined\"\n              color=\"inherit\"\n              onClick={onCancel}\n            >\n              Cancel\n            </StyledButton>\n            <StyledButton\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={handleBookAppointmentClick}\n              disabled={!selectedDate}\n            >\n              Book Appointment\n            </StyledButton>\n          </Box>\n        </Stack>\n      </StyledPaper>\n    </LocalizationProvider>\n  );\n};\n\nexport default ClientBookAppointment;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}